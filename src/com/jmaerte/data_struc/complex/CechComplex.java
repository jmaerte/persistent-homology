package com.jmaerte.data_struc.complex;

import com.jmaerte.data_struc.miniball.Miniball;
import com.jmaerte.data_struc.point_set.PointSet;
import com.jmaerte.util.calc.Shiftable;
import com.jmaerte.util.calc.Util;

/**
 * This class represents a cech-complex.
 */
public class CechComplex {

    private final PointSet S;

    private Simplex[] simplices;

    // This k-register holds our steps of simplex-dimensions in the simplices-array, meaning that the simplices
    // generated by n vertices(i.e. n-1 dimensional) lay in the range (kReg[n], kReg[n+1]) of the simplices array.
    private int[] kReg;

    public CechComplex(PointSet S) {
        this.S = S;

        // Init the k-register.
        kReg = new int[S.card() + 1];
        kReg[0] = 0;
        int size = 0;
        for(int i = 0; i <= S.card(); i++) {
            size += Util.binomi(S.card(), i);
            kReg[i + 1] = size;
        }

        simplices = new Simplex[size];

        generate();
    }

    private void generate() {
//        Shiftable shift = new Shiftable(S);
//        for(int k = 0; k <= S.card(); k++) {
//            int n = 0;
//            shift.reset(k);
//            while(!shift.isMax()) {
//                Simplex s = simplices[kReg[k] + n++] = shift.get();
//                shift.shift();
//            }
//        }
    }


}
